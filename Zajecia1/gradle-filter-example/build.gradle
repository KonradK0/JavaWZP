group 'konrad'
version '1.0-SNAPSHOT'

apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
}




jar {
    manifest {
        attributes "Main-Class": "GradleFilterExample"
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

sourceSets {
    main {
        resources {
            exclude 'profiles'
        }
    }
}

task myTask{
    def chosenProfileFile = file "src/main/resources/profiles/" + profile + ".properties"
    def dbPropertiesFile = file "src/main/resources/db.properties"

    def profileProperties = new Properties()
    def dbProperties = new Properties()

    chosenProfileFile.withReader {profileProperties.load(it)}
    dbPropertiesFile.withReader {dbProperties.load(it)}

    dbProperties.setProperty("database.jdbc.driverClass", profileProperties.getProperty("driverClass") )
    dbProperties.setProperty("database.jdbc.connectionURL", profileProperties.getProperty("connectionURL") )
    dbProperties.setProperty("database.jdbc.username", profileProperties.getProperty("username") )
    dbProperties.setProperty("database.jdbc.password", profileProperties.getProperty("password") )

    def outStream = new FileOutputStream("src/main/resources/db.properties")
    dbPropertiesFile.withWriter { dbProperties.store(outStream, null)}
    outStream.close()
}